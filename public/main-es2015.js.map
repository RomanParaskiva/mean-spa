{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/data.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","<div class=\"body\">\n    <app-navbar></app-navbar>\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { DataService } from './data.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HighchartsChartModule } from 'highcharts-angular';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { CardComponent } from './card/card.component';\n\n\nconst appRoute: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'dashboard', component: DashboardComponent}\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HomeComponent,\n    NavbarComponent,\n    CardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoute),\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    HttpClientModule,\n    HighchartsChartModule\n  ],\n  exports: [RouterModule],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport { Card } from '../dashboard/card';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() card: Card;\n  chartType: string = 'spline';\n  Highcharts = Highcharts; \n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n  switch(){\n    this.chartType !== 'spline' ? this.chartType = 'spline' : this.chartType = 'column'\n  }\n\n  close(){\n    this.card.toggle = !this.card.toggle\n  }\n\n\n}\n","<mat-card *ngIf=\"card.toggle == true\">\n    <mat-card-header \n    style = \"display:flex;align-items:center;padding: 10px 0;\">\n        <mat-card-title>{{card.cardId}}</mat-card-title>\n        <button mat-stroked-button style=\"margin-right: 10px;\" (click)=\"switch()\">Switch</button>\n        <button mat-stroked-button (click)=\"close()\">Close</button>\n\n    </mat-card-header>\n    <mat-card-content>\n        <highcharts-chart\n            [Highcharts]=\"Highcharts\"\n            [options] = \"{\n                chart: {\n                  type: chartType,\n                  backgroundColor: '#3e3e3e'\n                },\n                title: {\n                    text: card.name,\n                    style: {\n                        color: '#fff'\n                    }\n                },\n              yAxis: {\n                  type: 'linear'\n\n              },\n              xAxis: {\n                  categories: ['Вчера', 'Сегодня']\n              },\n              series: [{\n                  data: [card.prev, card.value ] \n              }]\n              }\"  \n            \n            style = \"width: 100%; height: 400px; display: block;\">\n        </highcharts-chart>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService} from '../data.service';\nimport { Card } from './card';\n\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  cards: Card[]; \n  \n  toggleCard(id:string) {\n      this.cards.map(card => {\n        card.cardId === id ? card.toggle = !card.toggle : '';\n      })\n  }\n  constructor(private dataService: DataService) {}\n  \n fetchData(): void {\n   this.dataService.fetchData()\n    .subscribe( ch => {\n      if(ch) {\n      this.cards = JSON.parse(ch);\n      } else {\n        console.log(ch)\n      }\n    }\n    )\n  }\n   ngOnInit(){\n     this.fetchData()\n   }\n   \n  \n\n\n}\n","<div class=\"dash_wrapper\">\n    <hr>\n        <div style=\"padding: 10px 25px;\">\n            <button\n                [color]=\"iterCard.toggle ? 'accent' : 'warn'\"  \n                mat-stroked-button\n                (click)=\"toggleCard(iterCard.cardId)\" \n                *ngFor=\"let iterCard of cards\">\n                    {{iterCard.cardId}}\n            </button>\n        </div>\n    <hr>\n    <app-card\n    *ngFor=\"let iterCard of cards\"\n    [card]=\"iterCard\">\n    </app-card>\n    \n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  fetchData(): Observable<string>{\n    \n    return this.http.get<string>('/dashboard');\n }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"home_wrapper\">\n    \n    <h1 style=\"font-size: 3em;\">Hey people!</h1>\n\n    <h3>It is a simple SPA showing the exchange rate against the ruble.<br>\n        It compares the current exchange rate with yesterday's.<br>\n        Since the API is limited to this data, it is not very informative.\n    </h3>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <button mat-button [routerLink]=\"['/']\">Home</button>\n      <button mat-button [routerLink]=\"['/dashboard']\">Dashboard</button>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
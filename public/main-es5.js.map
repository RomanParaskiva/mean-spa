{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/card/card.component.ts","webpack:///src/app/card/card.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/data.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoute","path","component","AppModule","declarations","providers","bootstrap","CardComponent","chartType","Highcharts","card","toggle","DashboardComponent","dataService","cards","map","cardId","fetchData","subscribe","ch","JSON","parse","console","log","DataService","http","get","providedIn","HomeComponent","NavbarComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","<div class=\"body\">\n    <app-navbar></app-navbar>\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { DataService } from './data.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HighchartsChartModule } from 'highcharts-angular';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { CardComponent } from './card/card.component';\n\n\nconst appRoute: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'dashboard', component: DashboardComponent}\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HomeComponent,\n    NavbarComponent,\n    CardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoute),\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    HttpClientModule,\n    HighchartsChartModule\n  ],\n  exports: [RouterModule],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport { Card } from '../dashboard/card';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  @Input() card: Card;\n  chartType: string = 'spline';\n  Highcharts = Highcharts; \n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n  switch(){\n    this.chartType !== 'spline' ? this.chartType = 'spline' : this.chartType = 'column'\n  }\n\n  close(){\n    this.card.toggle = !this.card.toggle\n  }\n\n\n}\n","<mat-card *ngIf=\"card.toggle == true\">\n    <mat-card-header \n    style = \"display:flex;align-items:center;padding: 10px 0;\">\n        <mat-card-title>{{card.cardId}}</mat-card-title>\n        <button mat-stroked-button style=\"margin-right: 10px;\" (click)=\"switch()\">Switch</button>\n        <button mat-stroked-button (click)=\"close()\">Close</button>\n\n    </mat-card-header>\n    <mat-card-content>\n        <highcharts-chart\n            [Highcharts]=\"Highcharts\"\n            [options] = \"{\n                chart: {\n                  type: chartType,\n                  backgroundColor: '#3e3e3e'\n                },\n                title: {\n                    text: card.name,\n                    style: {\n                        color: '#fff'\n                    }\n                },\n              yAxis: {\n                  type: 'linear'\n\n              },\n              xAxis: {\n                  categories: ['Вчера', 'Сегодня']\n              },\n              series: [{\n                  data: [card.prev, card.value ] \n              }]\n              }\"  \n            \n            style = \"width: 100%; height: 400px; display: block;\">\n        </highcharts-chart>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService} from '../data.service';\nimport { Card } from './card';\n\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  cards: Card[]; \n  \n  toggleCard(id:string) {\n      this.cards.map(card => {\n        card.cardId === id ? card.toggle = !card.toggle : '';\n      })\n  }\n  constructor(private dataService: DataService) {}\n  \n fetchData(): void {\n   this.dataService.fetchData()\n    .subscribe( ch => {\n      if(ch) {\n      this.cards = JSON.parse(ch);\n      } else {\n        console.log(ch)\n      }\n    }\n    )\n  }\n   ngOnInit(){\n     this.fetchData()\n   }\n   \n  \n\n\n}\n","<div class=\"dash_wrapper\">\n    <hr>\n        <div style=\"padding: 10px 25px;\">\n            <button\n                [color]=\"iterCard.toggle ? 'accent' : 'warn'\"  \n                mat-stroked-button\n                (click)=\"toggleCard(iterCard.cardId)\" \n                *ngFor=\"let iterCard of cards\">\n                    {{iterCard.cardId}}\n            </button>\n        </div>\n    <hr>\n    <app-card\n    *ngFor=\"let iterCard of cards\"\n    [card]=\"iterCard\">\n    </app-card>\n    \n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  fetchData(): Observable<string>{\n    \n    return this.http.get<string>('/dashboard');\n }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"home_wrapper\">\n    \n    <h1 style=\"font-size: 3em;\">Hey people!</h1>\n\n    <h3>It is a simple SPA showing the exchange rate against the ruble.<br>\n        It compares the current exchange rate with yesterday's.<br>\n        Since the API is limited to this data, it is not very informative.\n    </h3>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <button mat-button [routerLink]=\"['/']\">Home</button>\n      <button mat-button [routerLink]=\"['/dashboard']\">Dashboard</button>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}